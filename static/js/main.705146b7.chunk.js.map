{"version":3,"sources":["components/Header/Header.js","components/AuthDialog/AuthDialog.js","components/Footer/Footer.js","redux/actions.js","firebase.js","containers/FooterContainer.js","components/HideMe/HideMe.js","components/ChatMessage/ChatMessage.js","components/ChatSpace/ChatSpace.js","components/App/App.js","redux/store.js","redux/reducer.js","index.js"],"names":["Header","_ref","children","onLogOut","react_default","a","createElement","className","onClick","AuthDialog","state","login","setInput","e","_this","setState","target","value","handleLogIn","props","onLogIn","this","isOpened","placeholder","onChange","React","Component","Footer","input","onInputChange","sendMessage","onSend","keyListener","event","keyCode","ctrlKey","data-grid","onKeyDown","SEND_MESSAGE","LOG_OUT","LOG_IN","UPDATE_MESSAGE_POOL","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","FooterContainer","text","now","Date","message","id","name","userName","ref","concat","set","components_Footer_Footer","messages","connect","dispatch","handleSendMessage","type","HideMe","hide","ChatMessage","isOutgoing","classNames","justify-right","order-2","HideMe_HideMe","ChatSpace","renderMessages","map","msg","components_ChatMessage_ChatMessage","key","scrollToBottom","container","scrollTop","scrollHeight","_this2","App","messagesRef","on","snapshot","updateMessagePool","Object","values","val","components_AuthDialog_AuthDialog","components_Header_Header","handleLogOut","components_ChatSpace_ChatSpace","containers_FooterContainer","logIn","store","createStore","action","objectSpread","toConsumableArray","applyMiddleware","next","console","log","result","getState","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.705146b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ({children, onLogOut}) => (\r\n    <header className=\"Header\">\r\n        <p className=\"Header-userName\">{children}</p>\r\n        <div className=\"Header-button\" onClick={onLogOut}><div className=\"Header-button_text\">Выйти</div><i className=\"fas fa-sign-out-alt\"></i></div>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\nimport './AuthDialog.css';\n\nclass AuthDialog extends React.Component {\n    state={ login: '' }\n    setInput = (e) => {\n        this.setState({login: e.target.value})\n    }\n    handleLogIn = () => {\n        this.props.onLogIn(this.state.login);\n        this.setState({ login: '' });\n    }\n    render() {\n        return(    \n            this.props.isOpened ? \n                <div className='AuthDialog'>\n                    <div className='AuthDialog-form'>\n                    <h2>Чатик</h2>\n                    <input className='AuthDialog-input' placeholder='Логин' value={this.state.login} onChange={this.setInput}></input>\n                    <button onClick={this.handleLogIn} className='AuthDialog-button'>Войти</button>\n                    </div>\n                </div>\n            : null\n            )\n    }\n    }\n\nexport default AuthDialog","import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    \r\n    state = {input: ''}\r\n    \r\n    onInputChange = (e) => {\r\n        this.setState({input: e.target.value})\r\n    }\r\n\r\n    sendMessage = () => {\r\n        if (!this.state.input) return\r\n        this.props.onSend(this.state.input)\r\n        this.setState({input: ''});\r\n    }\r\n\r\n    keyListener = (event) => {\r\n        if (event.keyCode === 13 && event.ctrlKey) this.sendMessage();\r\n    }\r\n\r\n    render() {\r\n        return( \r\n            <footer className=\"Footer\" data-grid=\"va-stretch\">\r\n                <div className=\"Footer-textarea-container\">\r\n                    <textarea className=\"Footer-textarea\" placeholder=\"Ctrl+Enter для отправки\" onKeyDown = {this.keyListener} onChange={this.onInputChange} value={this.state.input}></textarea>\r\n                </div>\r\n                <div className='Footer-gap'></div>\r\n                <div className=\"Footer-button\" onClick={this.sendMessage}><i className=\"Footer-button-icon far fa-paper-plane\"></i></div>\r\n            </footer>\r\n        )}\r\n}\r\n\r\nexport default Footer;","\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const UPDATE_MESSAGE_POOL = 'UPDATE_MESSAGE_POOL';\r\n\r\nexport function sendMessage(id, text) {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        id,\r\n        text\r\n    }\r\n}\r\n\r\nexport function updateMessagePool(messages) {\r\n    return {\r\n        type: UPDATE_MESSAGE_POOL,\r\n        messages\r\n    }\r\n}\r\n\r\nexport function logIn(userName) {\r\n    return {\r\n        type: LOG_IN,\r\n        userName\r\n    }\r\n}\r\n\r\nexport function logOut() {\r\n    return {\r\n        type: LOG_OUT,\r\n    }\r\n}","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAqiGbBbiz9l0XKIQeTw1qlVonK8rmS3hU\",\r\n    authDomain: \"altarixchat.firebaseapp.com\",\r\n    databaseURL: \"https://altarixchat.firebaseio.com\",\r\n    projectId: \"altarixchat\",\r\n    storageBucket: \"altarixchat.appspot.com\",\r\n    messagingSenderId: \"707928431356\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst db = firebase.database();\r\n\r\nexport { db };","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Footer from '../components/Footer/Footer'\r\nimport { sendMessage } from '../redux/actions';\r\nimport {db} from '../firebase';\r\n\r\nclass FooterContainer extends React.Component {\r\n    sendMessage = (text) => {\r\n        let now = Date.now();\r\n        let message = {\r\n            id: now, \r\n            text,\r\n            name: this.props.userName\r\n        }\r\n        db.ref(`/messages/${now}`).set(message);\r\n    }\r\n\r\n    render() {\r\n        return <Footer messages={this.props.messages} onSend={this.sendMessage} />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleSendMessage(text) {\r\n        dispatch(sendMessage(Date.now(), text))\r\n    }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FooterContainer)","\r\nconst HideMe = ({hide, children}) => (\r\n    hide ? null : children \r\n)\r\n\r\nexport default HideMe;","import React from 'react';\r\nimport './ChatMessage.css';\r\nimport HideMe from '../HideMe/HideMe';\r\nimport classNames from 'classnames';\r\nconst ChatMessage = ({message, isOutgoing}) => {\r\n    return (<div className={classNames('ChatMessage',  {'justify-right': isOutgoing})}>\r\n        <div className={classNames(\"ChatMessage-message-avatar\", {'order-2': isOutgoing})}>\r\n            <i className=\"ChatMessage-message-avatar__icon fas fa-user-circle\"></i>\r\n            <HideMe hide={isOutgoing}><div className=\"ChatMessage-message-avatar__username\">{message.name}</div></HideMe>\r\n        </div>\r\n        <div className='ChatMessage-message-text'>{message.text}</div>\r\n    </div>)\r\n}\r\n\r\nexport default ChatMessage;","import React from 'react';\r\nimport ChatMessage from '../ChatMessage/ChatMessage';\r\nimport './ChatSpace.css';\r\n\r\nclass ChatSpace extends React.Component { \r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate({messages}) {\r\n        //if (messages[messages.length - 1].isOutgoing) {\r\n        this.scrollToBottom();\r\n        //}\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.container.scrollTop = this.container.scrollHeight;\r\n    }\r\n\r\n    renderMessages = () => {\r\n        return this.props.messages.map((msg) => <ChatMessage isOutgoing={this.props.userName === msg.name} message={msg} key={msg.id}/>)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ChatSpace\">\r\n            <div className=\"ChatSpace-messages\" ref={(container) => {this.container = container}}>{this.renderMessages()}</div>\r\n            </div>\r\n        )}\r\n    }\r\n\r\nexport default ChatSpace;","import React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport AuthDialog from '../AuthDialog/AuthDialog';\nimport FooterContainer from '../../containers/FooterContainer';\nimport ChatSpace from '../ChatSpace/ChatSpace';\nimport { connect } from 'react-redux';\nimport { logOut, logIn, updateMessagePool } from '../../redux/actions';\nimport './App.css';\nimport {db} from '../../firebase';\n\nclass App extends Component {\n  componentDidMount() {\n    this.messagesRef = db.ref('messages');\n    this.messagesRef.on('value', (snapshot) => {this.props.updateMessagePool(Object.values(snapshot.val()))})\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <AuthDialog isOpened={!this.props.userName} onLogIn={this.props.handleLogIn}/>\n        <Header onLogOut={this.props.handleLogOut}>{this.props.userName}</Header>\n        <ChatSpace messages={this.props.messages} userName = {this.props.userName}/>\n        <FooterContainer userName={this.props.userName}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({userName, messages}) => ({\n  userName, messages\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleLogOut() {\n    dispatch(logOut());\n  },\n  updateMessagePool(messages) {\n    dispatch(updateMessagePool(messages));\n  },\n  handleLogIn(userName) {\n    if (userName) dispatch(logIn(userName));\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducer';\r\n\r\n//let messages = [{id: '131232', userName: 'Алексаднр Анонимович', text: 'Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!', isOutgoing: false}, {id: '131432', userName: 'Я', text: 'Hello!', isOutgoing: true}, {id: '136232', userName: 'Федор Анон', text: 'Hello! Bla bla bla bla bla \\n bal bal balsdks jdfkdj fkldj fkldjf!', isOutgoing: false}]\r\n\r\n// messages = [...messages, ...messages];\r\n// messages = [...messages, ...messages];\r\n// messages = [...messages, ...messages];\r\n// messages = [...messages, ...messages];\r\n\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    userName: 'Семён Брятов'\r\n}\r\n\r\nconst logger = store => next => action => {\r\n    console.log('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    return result\r\n  }\r\n\r\nconst store = createStore(reducer, initialState, applyMiddleware(logger));\r\n\r\nexport default store;","import {SEND_MESSAGE, LOG_OUT, LOG_IN, UPDATE_MESSAGE_POOL} from './actions';\r\n\r\nexport default function reducer(state, action) {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {...state, messages: [...state.messages, {id: action.id, userName: state.userName, text: action.text, isOutgoing: true}]}\r\n        case LOG_OUT:\r\n            return {...state, userName: ''}\r\n        case LOG_IN:\r\n            return {...state, userName: action.userName}      \r\n        case UPDATE_MESSAGE_POOL:\r\n            return {...state, messages: action.messages}    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}